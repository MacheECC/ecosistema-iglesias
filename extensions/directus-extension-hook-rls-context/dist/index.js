var a=({action:a},{database:s,logger:e})=>{e?.info?.("RLS HOOK: packaged hook file was loaded"),a("request.start",async(a,{accountability:t})=>{const i=t?.user||"",r=!!t?.admin;let l="";try{if(i){const a=await s.raw("\n          SELECT array_to_string(array_agg(iglesia_id::text), ',') AS csv\n          FROM public.usuarios_iglesias\n          WHERE user_id = ?\n          ",[i]),e=a?.rows&&a.rows[0]||a?.[0]||{};l=e?.csv||""}}catch(a){e?.warn?.(`[set-rls-context] lookup failed: ${a?.message||a}`),l=""}try{await s.raw("SELECT set_config('app.user_id', ?, false)",[i]),await s.raw("SELECT set_config('app.is_super_admin', ?, false)",[r?"true":"false"]),await s.raw("SELECT set_config('app.allowed_iglesias', ?, false)",[l])}catch(a){e?.warn?.(`[set-rls-context] set_config failed: ${a?.message||a}`)}return async()=>{try{await s.raw("RESET app.user_id"),await s.raw("RESET app.is_super_admin"),await s.raw("RESET app.allowed_iglesias")}catch(a){e?.warn?.(`[set-rls-context] RESET failed: ${a?.message||a}`)}}})};export{a as default};
