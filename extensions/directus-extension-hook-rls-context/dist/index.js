var a=defineHook(({action:a},{database:s})=>{console.log("RLS HOOK: packaged hook file was loaded"),a("*",async(a,{accountability:e})=>{const i=e?.user||"",t=!!e?.admin;let r="";try{if(i){const a=await s.raw("SELECT array_to_string(array_agg(iglesia_id::text), ',') AS csv\n         FROM public.usuarios_iglesias\n        WHERE user_id = ?",[i]),e=a?.rows&&a.rows[0]||a?.[0]||{};r=e?.csv||""}}catch{r=""}try{await s.raw("SET app.user_id = ?",[i]),await s.raw("SET app.is_super_admin = ?",[t?"true":"false"]),await s.raw("SET app.allowed_iglesias = ?",[r])}catch(a){console.warn("[set-rls-context] SET failed:",a?.message||a)}return async()=>{try{await s.raw("RESET app.user_id"),await s.raw("RESET app.is_super_admin"),await s.raw("RESET app.allowed_iglesias")}catch(a){console.warn("[set-rls-context] RESET failed:",a?.message||a)}}})});export{a as default};
