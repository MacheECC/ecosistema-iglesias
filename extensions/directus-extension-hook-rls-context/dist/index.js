var a=({action:a},{database:s})=>{console.log("RLS: hook cargado (contexto global activado)"),a("*",async(a,{accountability:t})=>{if(!t?.user)return;const e=t.user,i=!0===t.admin?"true":"false";let o="";try{const a=await s.raw("\n\t\t\t\tSELECT array_to_string(array_agg(iglesia_id::text), ',') AS csv\n\t\t\t\tFROM public.usuarios_iglesias\n\t\t\t\tWHERE user_id = ?\n\t\t\t\t",[e]),t=a?.rows&&a.rows[0]||a?.[0]||{csv:""};o=t.csv||""}catch(a){console.warn("[RLS] Error obteniendo allowed_iglesias:",a?.message||a),o=""}try{await s.raw("SET app.user_id = ?",[e]),await s.raw("SET app.is_super_admin = ?",[i]),await s.raw("SET app.allowed_iglesias = ?",[o]),console.log("[RLS] Contexto establecido:",{user_id:e,is_super_admin:i,allowed_iglesias:o})}catch(a){console.warn("[RLS] SET context falló:",a?.message||a)}return async()=>{try{await s.raw("RESET app.user_id"),await s.raw("RESET app.is_super_admin"),await s.raw("RESET app.allowed_iglesias"),console.log("[RLS] Contexto limpiado:",{user_id:e,is_super_admin:i,allowed_iglesias:o})}catch(a){console.warn("[RLS] RESET falló:",a?.message||a)}}})};export{a as default};
