var a=({filter:a,action:e},{logger:s})=>{s?.info?.("[rls] hook loaded");const t="00000000-0000-0000-0000-000000000000";async function i({accountability:a,database:e},i){const r=a?.user||"",n=!!a?.admin,c=r||t,l=await async function(a,e){if(!e)return t;try{const s=await a.raw("\n        SELECT array_to_string(array_agg(iglesia_id::text), ',') AS csv\n        FROM public.usuarios_iglesias\n        WHERE user_id = ?\n        ",[e]),i=s?.rows&&s.rows[0]||s?.[0]||{},r=i?.csv;return r&&""!==r.trim()?r:t}catch(a){return s?.warn?.(`[rls] allowed iglesias lookup failed: ${a?.message||a}`),t}}(e,r);try{await e.raw("SELECT set_config('app.user_id', ?, false)",[c]),await e.raw("SELECT set_config('app.is_super_admin', ?, false)",[n?"true":"false"]),await e.raw("SELECT set_config('app.allowed_iglesias', ?, false)",[l])}catch(a){s?.warn?.(`[rls] set_config failed [${i}]: ${a?.message||a}`)}try{const a=await e.raw("\n        SELECT\n          current_setting('app.user_id', true)          AS user_id,\n          current_setting('app.is_super_admin', true)   AS is_super_admin,\n          current_setting('app.allowed_iglesias', true) AS allowed_iglesias\n        ");s?.info?.({msg:`[rls] context after set_config (${i})`,check:a?.rows?.[0],req_user:r||"(none)"})}catch(a){s?.warn?.(`[rls] verify failed [${i}]: ${a?.message||a}`)}}a("authenticate",async(a,e,s)=>(await i(s,"authenticate"),a)),a("items.query",async(a,e,s)=>(await i(s,`items.query:${e.collection}`),a)),a("items.read",async(a,e,s)=>(await i(s,`items.read:${e.collection}`),a)),e("response",async(a,e)=>{const{database:t}=e;try{await t.raw("RESET app.user_id"),await t.raw("RESET app.is_super_admin"),await t.raw("RESET app.allowed_iglesias")}catch(a){s?.warn?.(`[rls] RESET failed: ${a?.message||a}`)}})};export{a as default};
