var a=({action:a},{database:t})=>{console.log("RLS: hook cargado (contexto global con SET corregido)"),a("*",async(a,{accountability:s})=>{if(!s?.user)return;const e=s.user,i=!0===s.admin?"true":"false";let r="";try{const a=await t.raw("\n\t\t\t\tSELECT array_to_string(array_agg(iglesia_id::text), ',') AS csv\n\t\t\t\tFROM public.usuarios_iglesias\n\t\t\t\tWHERE user_id = ?\n\t\t\t\t",[e]),s=a?.rows&&a.rows[0]||a?.[0]||{csv:""};r=s.csv||""}catch(a){console.warn("[RLS] Error obteniendo allowed_iglesias:",a?.message||a),r=""}function o(a){return null==a?"":String(a).replace(/'/g,"''")}try{await t.raw(`SET app.user_id = '${o(e)}'`),await t.raw(`SET app.is_super_admin = '${o(i)}'`),await t.raw(`SET app.allowed_iglesias = '${o(r)}'`),console.log("[RLS] Contexto establecido:",{user_id:e,is_super_admin:i,allowed_iglesias:r})}catch(a){console.warn("[RLS] SET context falló incluso tras interpolar:",a?.message||a)}return async()=>{try{await t.raw("RESET app.user_id"),await t.raw("RESET app.is_super_admin"),await t.raw("RESET app.allowed_iglesias"),console.log("[RLS] Contexto limpiado:",{user_id:e,is_super_admin:i,allowed_iglesias:r})}catch(a){console.warn("[RLS] RESET falló:",a?.message||a)}}})};export{a as default};
