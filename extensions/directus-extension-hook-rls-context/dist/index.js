var a=({action:a},{database:t})=>{console.log("RLS HOOK: packaged hook file was loaded"),a("*",async(a,{accountability:s})=>{const e=s?.user||"",i=!!s?.admin;let r="";try{if(e){const a=await t.raw("SELECT array_to_string(array_agg(iglesia_id::text), ',') AS csv\n\t\t\t\t\tFROM public.usuarios_iglesias\n\t\t\t\t\tWHERE user_id = ?",[e]),s=a?.rows&&a.rows[0]||a?.[0]||{};r=s?.csv||""}}catch{r=""}try{await t.raw("SET app.user_id = ?",[e]),await t.raw("SET app.is_super_admin = ?",[i?"true":"false"]),await t.raw("SET app.allowed_iglesias = ?",[r])}catch(a){console.warn("[set-rls-context] SET failed:",a?.message||a)}return async()=>{try{await t.raw("RESET app.user_id"),await t.raw("RESET app.is_super_admin"),await t.raw("RESET app.allowed_iglesias")}catch(a){console.warn("[set-rls-context] RESET failed:",a?.message||a)}}})};export{a as default};
